@model Cartefact.Models.Person

@{
    ViewBag.Title = "Edit Profil";
}

<h2>Edit Profil</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DrivingHabits, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DrivingHabits, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DrivingHabits, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DriverExperience, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DriverExperience, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DriverExperience, "", new { @class = "text-danger" })
            </div>
        </div>

        <hr />

        <div class="form-group">
            @Html.Label("PasswordOld", "Old password", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.Editor("PasswordOld", new { htmlAttributes = new { @class = "form-control", type = "password" } })
                @Html.ValidationMessage("PasswordOld", "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("PasswordNew", "New password", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.Editor("PasswordNew", new { htmlAttributes = new { @class = "form-control", type = "password" } })
                @Html.ValidationMessage("PasswordNew", "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("PasswordConfirm", "Confirm new password", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.Editor("PasswordConfirm", new { htmlAttributes = new { @class = "form-control", type = "password" } })
                @Html.ValidationMessage("PasswordConfirm", "", new { @class = "text-danger" })
            </div>
        </div>

        <hr />

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-success" />
                @Html.ActionLink("Back to the Profil", "Index", null, new { @class = "btn btn-default", role = "button" })
            </div>
        </div>
    </div>
}
